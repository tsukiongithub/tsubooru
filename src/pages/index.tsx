import Search from "@/components/Search";
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useEffect, useState } from "react";
import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
	const [search, setSearch] = useState("");
	const [posts, setPosts] = useState<GelPost[]>([]);

	const { data: postsData, isSuccess: postsDataIsSuccess } = trpc.gelbooru.getPosts.useQuery({ search: search }, { refetchOnWindowFocus: false });

	useEffect(() => {
		if (postsDataIsSuccess) {
			if (postsData && postsData.posts) {
				setPosts(postsData.posts.map((post) => post));
			} else {
				setPosts([]);
			}
		}
	}, [postsData, postsDataIsSuccess]);

	const handleTagsOutput = (data: string) => {
		setSearch(data);
	};

	return (
		<>
			<Head>
				<title>image viewer</title>
				<meta
					name="description"
					content="Generated by create-t3-app"
				/>
				<link
					rel="icon"
					href="/favicon.ico"
				/>
			</Head>
			<main className="flex min-h-screen flex-col items-center">
				<div className="container flex flex-col items-center gap-12 px-4 py-16 ">
					<div className="w-full">
						<Search getSearchOutput={handleTagsOutput} />
					</div>
					<div className="w-full">
						{postsDataIsSuccess && (
							<div className="grid-flow-rows grid w-full gap-x-6 gap-y-12 sm:grid-cols-2 md:grid-cols-4 lg:grid-cols-6 xl:grid-cols-8">
								{posts.length >= 1 ? (
									posts.map((post, key) => {
										return (
											<div
												key={key}
												className="relative h-52 w-full"
											>
												<Link
													className="group flex h-full w-full items-center justify-center focus:outline-none"
													href={post.file_url}
												>
													<Image
														className="object-contain focus:outline-none group-focus-visible:ring-2 group-focus-visible:ring-red-600 group-focus-visible:ring-offset-2"
														src={post.preview_url}
														alt={`${post.id}`}
														fill
													/>
												</Link>
											</div>
										);
									})
								) : (
									<p>nothing found :/</p>
								)}
							</div>
						)}
					</div>
				</div>
			</main>
		</>
	);
};

export default Home;
