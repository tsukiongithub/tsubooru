import Search from "@/components/Search";
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useEffect, useState } from "react";
import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
	const [search, setSearch] = useState("");
	const [posts, setPosts] = useState<GelPost[]>([]);

	const { data: postsData, isSuccess: postsDataIsSuccess } = trpc.gelbooru.getPosts.useQuery({ search: search }, { refetchOnWindowFocus: false });

	useEffect(() => {
		if (postsDataIsSuccess) {
			// eslint-disable-next-line @typescript-eslint/no-non-null-assertion
			setPosts(postsData!.posts!.map((post) => post));
		}
	}, [postsData, postsDataIsSuccess]);

	const handleTagsOutput = (data: string) => {
		setSearch(data);
	};

	return (
		<>
			<Head>
				<title>Create T3 App</title>
				<meta
					name="description"
					content="Generated by create-t3-app"
				/>
				<link
					rel="icon"
					href="/favicon.ico"
				/>
			</Head>
			<main className="flex min-h-screen flex-col items-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
				<div className="container flex flex-col items-center gap-12 px-4 py-16 ">
					<div className="w-full">
						<Search getSearchOutput={handleTagsOutput} />
					</div>
					<div className="w-full">
						{postsDataIsSuccess && (
							<div className="grid-flow-rows grid w-full gap-x-6 gap-y-12 sm:grid-cols-2 md:grid-cols-4 lg:grid-cols-6 xl:grid-cols-8">
								{posts.map((post, key) => {
									return (
										<div
											key={key}
											className="relative h-52 w-auto"
										>
											<Image
												className="object-contain"
												src={post.preview_url}
												alt={`${post.id}`}
												fill
											/>
										</div>
									);
								})}
							</div>
						)}
					</div>
				</div>
			</main>
		</>
	);
};

export default Home;
