import Search from "@/components/Search";
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
	const router = useRouter();
	const { s } = router.query;

	const [search, setSearch] = useState<string>();
	const [posts, setPosts] = useState<GelPost[]>([]);

	const { data: postsData, isSuccess: postsDataIsSuccess } = trpc.gelbooru.getPosts.useQuery({ search: search }, { refetchOnWindowFocus: false });

	useEffect(() => {
		if (postsDataIsSuccess) {
			if (postsData && postsData.posts) {
				setPosts(postsData.posts.map((post) => post));
			} else {
				setPosts([]);
			}
		}
	}, [postsData, postsDataIsSuccess]);

	useEffect(() => {
		if (s !== undefined) {
			if (s.length > 0) {
				setSearch(s as string);
			} else {
				router.push("");
				setSearch("");
			}
		}
	}, [s, router]);

	return (
		<>
			<Head>
				<title>image viewer</title>
				<meta
					name="description"
					content="Generated by create-t3-app"
				/>
				<link
					rel="icon"
					href="/favicon.ico"
				/>
			</Head>
			<header className="w-full">
				<Search />
			</header>
			<main>
				<div className="w-full">
					{postsDataIsSuccess && (
						<div className="grid-flow-rows grid w-full gap-x-6 gap-y-12 sm:grid-cols-2 md:grid-cols-4 lg:grid-cols-6 xl:grid-cols-8">
							{posts.length >= 1 ? (
								posts.map((post, key) => {
									return (
										<article
											key={key}
											className="relative flex w-full flex-col"
										>
											<Link
												className="group flex h-48 items-center justify-center focus:outline-none"
												href={post.file_url}
											>
												<Image
													className={`max-h-full max-w-full object-contain focus:outline-none group-focus-visible:ring-2 group-focus-visible:ring-red-600 group-focus-visible:ring-offset-2`}
													src={post.preview_url}
													alt={`${post.id}`}
													width={post.preview_width}
													height={post.preview_height}
												/>
											</Link>
										</article>
									);
								})
							) : (
								<p>nothing found :/</p>
							)}
						</div>
					)}
				</div>
			</main>
		</>
	);
};

export default Home;
